/*
题目大意：
	给定一棵二叉树，返回其zigzag层次遍历得到的数组（即先从左往右，下一层再从右往左）。
解题思路：
	在层次遍历思路基础上，设置标志位标示这一层该从左往右还是从右往左，若是从右往左，则先将当前结点的右孩子加入队列中，否则先将左孩子加入队列中。每一层都是倒序读取。
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int> > zigzagLevelOrder(TreeNode* root)
    {
        vector<TreeNode*>q;
        TreeNode*r;
        int flag = -1;
        vector<vector<int> >res;
        if(root == NULL)
            return res;
        q.push_back(root);
        while(q.size() != 0)
        {
            vector<int>tmp;
            vector<TreeNode*>p;
            for(int i = q.size() - 1; i >= 0; i--)
            {
                tmp.push_back(q[i]->val);
                if(flag == -1)
                {
                    if(q[i]->left != NULL)
                        p.push_back(q[i]->left);
                    if(q[i]->right != NULL)
                        p.push_back(q[i]->right);
                }
                else
                {
                    if(q[i]->right != NULL)
                        p.push_back(q[i]->right);
                    if(q[i]->left != NULL)
                        p.push_back(q[i]->left);
                }
            }
            flag = -flag;
            if(tmp.size() > 0)
                res.push_back(tmp);
            q = p;
        }
        return res;
    }
};