/*
题目大意：
	给定两个用字符串表示的正整数，返回用字符串表示的他们的乘积。两个整数都可以任意大。
解题思路：
	大整数乘法。
注意的点：
	注意处理边界和进位。

*/
class Solution {
public:
string add(string n1, string n2, int l)
{
	if(n1.size() == 0)
		return n2;
	for(int i = 0; i < l; i++)
	{
		n2 += '0';
	}
	int x, y, r = 0, sum;
	string res;
	char ch;
	int i = n1.length() - 1, j = n2.length() - 1;
	while(i >= 0 || j >= 0)
	{
		x = i >= 0 ? (n1[i] - '0') : 0;
		y = j >= 0 ? (n2[j] - '0') : 0;
		sum = x + y + r;
		r = sum / 10;
		ch = '0' + sum % 10;
		res = ch + res;
		i--;
		j--;
	}
	if(r != 0)
	{
		res = '1' + res;
	}
	return res;
}
string multiply(string num1, string num2)
{
	if(num1.length() < num2.length())
		return multiply(num2, num1);
	if(num1 == "0" || num2 == "0")
	    return "0";
	int x, y, r;
	string res;
	char ch;
	for(int i = num2.length() - 1; i >= 0; i--)
	{
		x = num2[i] - '0';
		r = 0;
		int t = 0;
		string tmp;
		for(int j = num1.length() - 1; j >= 0; j--)
		{
			t = (num1[j] - '0') * x + r;
			ch = '0' + t % 10;
			r = t / 10;
			tmp = ch + tmp;
		}
		if(r > 0)
		{
			ch = '0' + r;
			tmp = ch + tmp;
		}
		res = add(res, tmp, num2.length() - 1 - i);
	}
    return res;   
}
};