/*
题目大意：
	给定一个整数，将其转换成罗马数字表示的形式。
解题思路：
	首先将数字对应的罗马符号存入字典；然后求得10的该数位数次幂（l表示），以得到最高位的数字，进入循环，每次判断最高位数字，分等于0、1-3,4,5-8,9五种情况进行分别处理；直到数字被减为0，返回结果。
注意的点：
	需分五种情况各自处理。
*/
class Solution {
public:
string intToRoman(int num)
{
	string res;
	if(num <= 0)
		return res;
	map<int, char>dict;
	dict.insert(pair<int, char>(1, 'I'));
	dict.insert(pair<int, char>(5, 'V'));
	dict.insert(pair<int, char>(10, 'X'));
	dict.insert(pair<int, char>(50, 'L'));
	dict.insert(pair<int, char>(100, 'C'));
	dict.insert(pair<int, char>(500, 'D'));
	dict.insert(pair<int, char>(1000, 'M'));
	map<int, char>::iterator it = dict.end();
	int l = 1, x = num;
	while(x)
	{
		l *= 10;
		x /= 10;
	}
	l /= 10;
	while(num)
	{
		int tmp = num / l;
		if(tmp == 9)
		{
			res = res + dict[l] + dict[l * 10];
			num = num - l * 10 + l;
			l /= 10;
		}
		else if(tmp == 4)
		{
			res = res + dict[l] + dict[l * 5];
			num = num - l * 5 + l;
			l /= 10;
		}
		else if(tmp == 0)
		{
			l /= 10;
		}
		else if(tmp > 4)
		{
			res = res + dict[l * 5];
			num -= l * 5;
		}
		else
		{
			res = res + dict[l];
			num -= l;
		}
	}
	return res;       
}
};