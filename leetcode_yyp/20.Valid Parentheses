/*
题目大意：
	给定一个只包含‘(’，‘)’，‘[’,']','{','}'的字符串，判断该字符串是否合法。如“()[]{}”合法，而"([)]"不合法。
解题思路：
	读取字符串，如果是左括号，则压入栈中，如果是右括号，则弹出此时栈顶的元素，如果不是对应匹配的左括号，则返回false，否则，继续读取字符串，直到读完。
注意的点：
	如果读完后栈不空，则为非法字符串
*/
class Solution {
public:
    bool isValid(string s)
{
	vector<char>st;
	for(int i = 0; i < s.size(); i++)
	{
		if(s[i] == '(' || s[i] == '{' || s[i] == '[')
		{
			st.push_back(s[i]);
		}
		else if(st.size() > 0 && ((s[i] == '}' && st[st.size() - 1] == '{') || (s[i] == ')' && st[st.size() - 1] == '(') || (s[i] == ']' && st[st.size() - 1] == '[')))
		{
			st.pop_back();
		}
		else
		{
			return false;
		}
	}    
	if(st.size() == 0)
		return true;
	else
		return false;    
}
};