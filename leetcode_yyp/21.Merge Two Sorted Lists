/*
题目大意：
	合并两个排好序的链表，新链表由合并这两个链表的节点产生。
解题思路：
	每次比较两个链表头指针，将小值加入当前链表尾部，该链表头指针后移；当一个链表为空时，将剩下的链表的点加入结果链表。
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2)
    {
        ListNode * head = new ListNode(0);
        ListNode * cur = head;
        while(l1 != NULL && l2 != NULL)
        {
            if(l1->val < l2->val)
            {
                cur->next = l1;
                l1 = l1->next;
            }
            else
            {
                cur->next = l2;
                l2 = l2->next;
            }
            cur = cur->next;
        }
        if(l1 == NULL)
        {
            cur->next = l2;
        }
        else
        {
            cur->next = l1;
        }
        return head->next;    
    }
};