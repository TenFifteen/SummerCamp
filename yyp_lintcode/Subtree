题目：判断一棵树是否是另一棵树的子树。
解题：递归，注意，子树是从一个点切割后两者完全相同，而不是只是其中一部分。
/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param T1, T2: The roots of binary tree.
     * @return: True if T2 is a subtree of T1, or false.
     */
    bool isSubtree(TreeNode *T1, TreeNode *T2) {
        // write your code here
        if(T2 == NULL)  return true;
        if(T1 == NULL) return false;
        if(T1->val == T2->val)
            if(helper(T1->left, T2->left) && helper(T1->right, T2->right))
                return true;
        return isSubtree(T1->left, T2) || isSubtree(T1->right, T2);
    }
    bool helper(TreeNode * T1, TreeNode * T2) {
        if(T1 == NULL || T2 == NULL) return T1 == T2;
        if(T1->val != T2->val) return false;
        return helper(T1->left, T2->left) && helper(T1->right, T2->right);
    }
};