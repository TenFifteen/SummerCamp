题目：将k个颜色分别放到一起。
解题：快排思想。看别人的思路，用vector做桶，统计各个颜色的数目，然后从后往前恢复数组即可。
class Solution{
public:
    /**
     * @param colors: A list of integer
     * @param k: An integer
     * @return: nothing
     */    
    void sortColors2(vector<int> &colors, int k) {
        int i = 0, l = colors.size();
        while(i < l) {
            while(colors[i] > 0) {
                int tmp = colors[i] - 1;
                if(colors[tmp] > 0) {
                    colors[i] = colors[tmp];
                    colors[tmp] = -1;
                } else {
                    colors[tmp]--;
                    colors[i] = 0;
                }
            }
            i++;
        }
        i = l - 1;
        for(int index = k; index > 0; index--) {
            int cnt = -colors[index - 1];
            while(i >= 0 && cnt > 0) {
                colors[i--] = index;
                cnt--;
            }
        }
        return;
    }
    /*void sortColors2(vector<int> &colors, int k) {
        // write your code here
        if(k == 1) return;
        int m = (k + 1) / 2;
        helper(colors, 1, k, 0, colors.size() - 1);
    }
    void helper(vector<int> &colors, int kstart, int k, int l, int h) {
        if(kstart >= k) return;
        int m = (k + kstart) / 2, low = l, high = h;
        while(low < high) {
            while(low < high && colors[high] > m) high--;
            while(low < high && colors[low] <= m) low++;
            if(low < high) {
                swap(colors[low], colors[high]);
                low++;
                high--;
            }
        }
        helper(colors, kstart, (k + kstart) / 2, l, low);
        helper(colors, (k + kstart) / 2 + 1, k,  low, h);
    }*/
};
