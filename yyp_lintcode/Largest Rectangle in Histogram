题目：条形图中的最大矩形。
解题：栈中保存一个递增的序列。当当前元素小于栈顶元素时，弹出，直到大于栈顶元素，弹出的过程求解最大矩形，注意的是，矩形的宽为弹出后i - st.top() - 1;且需要在height中压入最后一个0元素，以便清空栈。
class Solution {
public:
    /**
     * @param height: A list of integer
     * @return: The area of largest rectangle in the histogram
     */
    int largestRectangleArea(vector<int> &height) {
        // write your code here
        int l = height.size(), res = 0;
        if(l == 0) return 0;
        height.push_back(0);
        stack<int>st;
        st.push(0);
        for(int i = 1; i <= l; i++) {
            if(height[i] > height[st.top()])
                st.push(i);
            else {
                while(!st.empty() && height[st.top()] >= height[i]) {
                    int tmp = height[st.top()];
                    st.pop();
                    res = max(res, tmp * (i - (st.empty() ? 0 : st.top() + 1)));
                }
                st.push(i);
            }
        }
        return res;
    }
};
