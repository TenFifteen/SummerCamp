题目：矩阵中的最大矩形。
解题：对每一行应用Largest Rectangle in Histogram的算法即可。
class Solution {
public:
    /**
     * @param matrix a boolean 2D matrix
     * @return an integer
     */
    int maximalRectangle(vector<vector<bool> > &matrix) {
        // Write your code here
        int m = matrix.size();
        if(m == 0) return 0;
        int n = matrix[0].size(), res = 0;
        vector<int>cur(n, 0);
        for(int i = 0; i < n; i++) {
            cur[i] = matrix[0][i] ? 1 : 0;
            res = max(res, cur[i]);
        }
        for(int i = 1; i < m; i++) {
            for(int j = 0; j < n; j++) {
                if(matrix[i][j]) cur[j] += 1;
                else cur[j] = 0;
            }
            res = max(largest(cur), res);
        }
        return res;
    }
    int largest(vector<int>cur) {
        int res = 0;
        cur.push_back(0);
        stack<int>st;
        for(int i = 0; i < cur.size(); i++) {
            if(st.empty() || cur[i] > cur[st.top()])
                st.push(i);
            else {
                while(!st.empty() && cur[i] <= cur[st.top()]) {
                    int tmp = st.top();
                    st.pop();
                    tmp = cur[tmp] * (i - 1 - (st.empty() ? -1 : st.top()));
                    res = max(res, tmp);
                }
                st.push(i);
            }
        }
        return res;
    }
};