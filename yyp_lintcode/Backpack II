题目：给定物品体积和物品价值，背包容量。求最大能获得的价值。
解题：二维动归。f[i][j] = max(f[i][j], f[i - 1][j]， f[i - 1][j - A[i - 1]] + V[i - 1]);
class Solution {
public:
    /**
     * @param m: An integer m denotes the size of a backpack
     * @param A & V: Given n items with size A[i] and value V[i]
     * @return: The maximum value
     */
    int backPackII(int m, vector<int> A, vector<int> V) {
        // write your code here
        int l = A.size();
        vector<vector<int> >f(l + 1, vector<int>(m + 1, 0));
        for(int i = 1; i <= l; i++) {
            for(int j = 1; j <= m; j++) {
                f[i][j] = max(f[i][j], f[i - 1][j]);
                if(j >= A[i - 1]) f[i][j] = max(f[i][j], f[i - 1][j - A[i - 1]] + V[i - 1]);
            }
        }
        return f[l][m];
    }
};