题目：字母数字转码方式。
解题：递归超时。动归！但从前往后注意判断s[i - 2]!='0'的情况。从后往前不需要判断。还要注意判断不合法的情况。
class Solution {
public:
    /**
     * @param s a string,  encoded message
     * @return an integer, the number of ways decoding
     */
    /*public int numDecodings(String s) {
        int n = s.length();
        if (n == 0) return 0;

        int[] memo = new int[n+1];
        memo[n]  = 1;
        memo[n-1] = s.charAt(n-1) != '0' ? 1 : 0;

        for (int i = n - 2; i >= 0; i--)
            if (s.charAt(i) == '0') continue;
            else memo[i] = (Integer.parseInt(s.substring(i,i+2))<=26) ? memo[i+1]+memo[i+2] : memo[i+1];

        return memo[0];
    }*/
    int numDecodings(string& s) {
        // Write your code here
        int l = s.size();
        if(l == 0 || s[0] == '0') return 0;
        vector<int>f(l + 1, 0);
        f[0] = f[1] = 1;
        for(int i = 2; i <= l; i++) {
            int tmp = atoi(s.substr(i - 2, 2).c_str());
            if(s[i - 1] == '0') {
                if(tmp <= 0 || tmp > 26) return 0;
                f[i] = f[i - 2];
            } else {
                f[i] = f[i - 1] + (s[i - 2] != '0' && tmp > 0 && tmp <= 26 ? f[i - 2] : 0);
            }
        }
        return f[l];
    }

};